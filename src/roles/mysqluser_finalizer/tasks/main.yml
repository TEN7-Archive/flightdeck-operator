---
- name: Fetch the MySQLCluster definition
  set_fact:
    _cluster_def: "{{ lookup('k8s', kind='MySQLCluster', namespace=_cluster_def_namespace, resource_name=cluster.name) }}"
  vars:
    _cluster_def_namespace: "{{ cluster.namespace | default(ansible_operator_meta.namespace) }}"
- fail:
    msg: "Could not find requested MySQLCluster {{ cluster.name }}"
  when:
    - "(_cluster_def | default([])) | length < 1"

- name: Generate the cluster name
  set_fact:
    _mysql_cluster_full_name: "{{ _cluster_def.spec.fullname_override | default('mysqlcluster-' + cluster.name) }}"

- name: Get the mysql operator secret name
  set_fact:
    _mysql_operator_secret_name: "{{ _cluster_def.spec.mysql_operator_secret | default(_mysql_cluster_full_name + '-operator') }}"

- name: Fetch the operator secret
  set_fact:
    _mysql_operator_secret_def: "{{ lookup('k8s', api_version='v1', kind='secret', namespace=_cluster_def.metadata.namespace, resource_name=_mysql_operator_secret_name) }}"
- fail:
    msg: "Could not get password from secret: {{ _mysql_operator_secret_name }}"
  when:
    - "(_mysql_operator_secret_def.data['db-pass.txt'] | default('')) == ''"

- name: Get the operator password from the secret
  set_fact:
    _mysql_operator_user: "{{ _mysql_operator_secret_def.data['db-user.txt'] | b64decode }}"
    _mysql_operator_password: "{{ _mysql_operator_secret_def.data['db-pass.txt'] | b64decode }}"

- name: Delete the MySQL user
  mysql_user:
    name: "{{ username | default(ansible_operator_meta.name) }}"
    host: "{{ host | default('%') }}"
    state: absent
    login_user: "{{ _mysql_operator_user }}"
    login_password: "{{ _mysql_operator_password }}"
    login_host: "{{_mysql_cluster_full_name }}-0.{{ _mysql_cluster_full_name }}.{{ _cluster_def.metadata.namespace }}.svc.cluster.local"

- name: Delete the mysql user secret if operator created
  k8s:
    api_version: "v1"
    kind: "Secret"
    name: "{{ 'mysqluser-' + cluster.name + ansible_operator_meta.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
    state: absent
  when:
    - "(password_secret | default('')) == ''"
  when:
    - "(password_secret | default('')) == ''"
