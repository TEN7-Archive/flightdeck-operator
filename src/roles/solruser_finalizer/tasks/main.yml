---
- name: Update the CRD status
  operator_sdk.util.k8s_status:
    api_version: flightdeck.t7.io/v1
    kind: SolrUser
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
    status:
      flightdeckOperator:
        firstRun: true
        status: false
        deleting: true
        message: "SolrUser {{ ansible_operator_meta.name }} is being deleted."

- name: Generate the SolrCluster namespace
  set_fact:
    _solrcluster_namespace: "{{ solr_cluster.namespace | default(ansible_operator_meta.namespace) }}"

- name: Fetch the SolrCluster definition
  set_fact:
    _solrcluster_def: "{{ lookup('k8s', kind='SolrCluster', namespace=_solrcluster_namespace, resource_name=solr_cluster.name) }}"

- fail:
    msg: "Could not find requested SolrCluster {{ solr_cluster.name }}"
  when:
    - "(_solrcluster_def | default([])) | length < 1"

- name: Generate the solr cluster name
  set_fact:
    _solr_cluster_full_name: "{{ _solrcluster_def.spec.fullnameOverride | default(solr_cluster.name + '-solrcluster') }}"

- name: Generate the solr service url
  set_fact:
    _solr_cluster_url: "http://{{ _solrcluster_def.spec.service.name | default(_solr_cluster_full_name) }}.{{ _solrcluster_namespace }}.svc.cluster.local:{{ _solrcluster_def.spec.port | default('8983') }}"

- name: Generate the solr admin secret name
  set_fact:
    _solr_admin_secret_name: "{{ _solrcluster_def.spec.solrAdmin.secret | default('admin-' + _solr_cluster_full_name) }}"

- name: Fetch the solr admin secret
  set_fact:
    _solr_admin_secret_def: "{{ lookup('k8s', kind='secret', namespace=ansible_operator_meta.namespace, resource_name=_solr_admin_secret_name) }}"

- fail:
    msg: "Could not find requested secret {{ _solr_admin_secret_name }}"
  when:
    - "(_solr_admin_secret_def | default([])) | length < 1"

- name: Extract the solr admin credentials
  set_fact:
    _solr_admin_user: "{{ _solr_admin_secret_def.data['user'] | b64decode }}"
    _solr_admin_password: "{{ _solr_admin_secret_def.data['password'] | b64decode }}"

- name: Generate the solr user name
  set_fact:
    _solr_user_full_name: "{{ fullname_override | default(ansible_operator_meta.name + '-solruser') }}"

- name: Get a list of users
  uri:
    url: "{{ _solr_cluster_url }}/api/cluster/security/authentication"
    force_basic_auth: true
    user: "{{ _solr_admin_user }}"
    password: "{{ _solr_admin_password }}"
    method: GET
    headers:
      Content-Type: "application/json"
    return_content: yes
    status_code:
      - 200
  register: _user_list
  until: _user_list.status == 200
  retries: 3
  delay: 30

- name: Remove the user's roles if the user exists
  uri:
    url: "{{ _solr_cluster_url }}/solr/admin/authorization"
    force_basic_auth: true
    user: "{{ _solr_admin_user }}"
    password: "{{ _solr_admin_password }}"
    method: POST
    headers:
      Content-Type: "application/json"
    return_content: yes
    status_code:
      - 200
      - 201
    body_format: json
    body: |
      {
        "set-user-role": {
          "{{ ansible_operator_meta.name }}": null
        }
      }
  register: _solr_remove_roles
  when:
    - _user_list.json.authentication.credentials[ansible_operator_meta.name] | default('') != ''
    - _user_list.status != 401
  until: (_solr_remove_roles.status == 200) or (_solr_remove_roles.status == 201)
  retries: 3

- name: Delete the user if they exist
  uri:
    url: "{{ _solr_cluster_url }}/solr/admin/authentication"
    force_basic_auth: true
    user: "{{ _solr_admin_user }}"
    password: "{{ _solr_admin_password }}"
    method: POST
    headers:
      Content-Type: "application/json"
    return_content: yes
    status_code:
      - 200
      - 201
    body_format: json
    body: |
      {
        "delete-user": [
          "{{ ansible_operator_meta.name }}"
        ]
      }
  register: _solr_delete
  when:
    - _user_list.json.authentication.credentials[ansible_operator_meta.name] | default('') != ''
    - _user_list.status != 401
  until: (_solr_delete.status == 200) or (_solr_delete.status == 201)
  retries: 3
  delay: 30
