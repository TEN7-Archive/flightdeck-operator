---
- name: Get the mysql root secret name
  set_fact:
    _mysql_root_secret_name: "{{ mysql_root_secret | default(_mysql_cluster_full_name + '-root') }}"
- name: Check if the mysql operator secret already exists
  set_fact:
    _mysql_root_secret_def: "{{ lookup('k8s', kind='secret', namespace=ansible_operator_meta.namespace, resource_name=_mysql_root_secret_name) }}"

- name: Create tempfile for the root password
  tempfile:
    state: file
    prefix: "mysql_root_password"
  register: _mysql_root_secret_passfile
  notify:
    - "delete mysql root secret tempfile"
  when:
    - "(_mysql_root_secret_def | length) < 1"
- name: Create mysql root secret
  k8s:
    definition: |
      apiVersion: v1
      data:
        root-pass.txt: "{{ lookup('password', '_mysql_root_secret_passfile.path chars=ascii_letters,digits,hexdigits,punctuation') | b64encode }}"
      kind: Secret
      metadata:
        name: {{ _mysql_root_secret_name }}
        labels:
          app.kubernetes.io/managed-by: "flightdeck-operator"
          app.kubernetes.io/created-by: "controller-manager"
          app.kubernetes.io/name: "MySQLCluster"
          app.kubernetes.io/instance: "{{ ansible_operator_meta.name }}"
          app.kubernetes.io/part-of: "{{ _mysql_cluster_full_name }}"
          flightdeck.ten7.io/mysqlcluster: "{{ ansible_operator_meta.name }}"
      type: Opaque
    namespace: "{{ ansible_operator_meta.namespace }}"
  when:
    - "(_mysql_root_secret_def | length) < 1"

- name: Get the mysql operator secret name
  set_fact:
    _mysql_operator_secret_name: "{{ mysql_operator_secret | default(_mysql_cluster_full_name + '-operator') }}"
- name: Check if the mysql operator secret already exists
  set_fact:
    _mysql_operator_secret_def: "{{ lookup('k8s', kind='secret', namespace=ansible_operator_meta.namespace, resource_name=_mysql_operator_secret_name) }}"

- name: Create tempfile for the operator password
  tempfile:
    state: file
    prefix: "mysql_operator_secret"
  register: _mysql_operator_secret_passfile
  notify:
    - "delete mysql operator secret tempfile"
  when:
    - "(_mysql_operator_secret_def | length) < 1"
- name: Create mysql operator secret
  k8s:
    definition: |
      apiVersion: v1
      data:
        db-user.txt: "{{ 'operator' | b64encode }}"
        db-pass.txt: "{{ lookup('password', '_mysql_operator_secret_passfile.path chars=ascii_letters,digits,hexdigits,punctuation') | b64encode }}"
      kind: Secret
      metadata:
        name: {{ _mysql_operator_secret_name }}
        labels:
          app.kubernetes.io/managed-by: "flightdeck-operator"
          app.kubernetes.io/created-by: "controller-manager"
          app.kubernetes.io/name: "MySQLCluster"
          app.kubernetes.io/instance: "{{ ansible_operator_meta.name }}"
          app.kubernetes.io/part-of: "{{ _mysql_cluster_full_name }}"
          flightdeck.ten7.io/mysqlcluster: "{{ ansible_operator_meta.name }}"
      type: Opaque
    namespace: "{{ ansible_operator_meta.namespace }}"
  when:
    - "(_mysql_operator_secret_def | length) < 1"

- name: Get the mysql readers secret name
  set_fact:
    _mysql_readers_secret_name: "{{ mysql_readers_secret | default(_mysql_cluster_full_name + '-user') }}"
- name: Check if the mysql readers secret already exists
  set_fact:
    _mysql_readers_secret_def: "{{ lookup('k8s', kind='secret', namespace=ansible_operator_meta.namespace, resource_name=_mysql_readers_secret_name) }}"

- name: Create tempfile for the reader password
  tempfile:
    state: file
    prefix: "mysql_readers_secret"
  register: _mysql_readers_secret_passfile
  notify:
    - "delete mysql readers secret tempfile"
  when:
    - "(_mysql_readers_secret_def | length) < 1"
- name: Create mysql readers secret
  k8s:
    definition: |
      apiVersion: v1
      data:
        db-user.txt: "{{ 'reader' | b64encode }}"
        db-pass.txt: "{{ lookup('password', '_mysql_readers_secret_passfile.path chars=ascii_letters,digits,hexdigits,punctuation') | b64encode }}"
      kind: Secret
      metadata:
        name: {{ _mysql_readers_secret_name }}
        labels:
          app.kubernetes.io/managed-by: "flightdeck-operator"
          app.kubernetes.io/created-by: "controller-manager"
          app.kubernetes.io/name: "MySQLCluster"
          app.kubernetes.io/instance: "{{ ansible_operator_meta.name }}"
          app.kubernetes.io/part-of: "{{ _mysql_cluster_full_name }}"
          flightdeck.ten7.io/mysqlcluster: "{{ ansible_operator_meta.name }}"
      type: Opaque
    namespace: "{{ ansible_operator_meta.namespace }}"
  when:
    - "(_mysql_readers_secret_def | length) < 1"
