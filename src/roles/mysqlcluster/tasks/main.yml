---
- name: Generate the cluster name
  set_fact:
    _mysql_cluster_full_name: "{{ fullname_override | default('mysqlcluster-' + ansible_operator_meta.name) }}"

# - debug: var=hostvars[inventory_hostname]

- name: Work with secrets
  include_tasks: 'secrets.yml'
- name: Work with configmaps
  include_tasks: 'configmaps.yml'
- name: Work with the statefulsets
  include_tasks: 'statefulset.yml'
- name: Work with the services
  include_tasks: 'service.yml'

- name: Get the mysql operator secret name
  set_fact:
    _mysql_operator_secret_name: "{{ mysql_operator_secret | default(_mysql_cluster_full_name + '-operator') }}"

- name: Fetch the operator secret
  set_fact:
    _mysql_operator_secret_def: "{{ lookup('k8s', api_version='v1', kind='secret', namespace=ansible_operator_meta.namespace, resource_name=_mysql_operator_secret_name) }}"
- fail:
    msg: "Could not get password from secret: {{ _mysql_operator_secret_name }}"
  when:
    - "(_mysql_operator_secret_def.data['db-pass.txt'] | default('')) == ''"
- name: Get the operator login from the secret
  set_fact:
    _mysql_operator_user: "{{ _mysql_operator_secret_def.data['db-user.txt'] | b64decode }}"
    _mysql_operator_password: "{{ _mysql_operator_secret_def.data['db-pass.txt'] | b64decode }}"

- name: Work with replication
  include_tasks: 'replication.yml'
  with_sequence: start=1 count={{ (replicas | default(1) | int) - 1 }}
  loop_control:
    loop_var: _reader_delta
  when:
    - ((replicas | default(1)) | int) > 1
