---
# Hostnames in mysql can't be more than 60 characters, so we use the namespace local hostnames instead.
- name: Generate writer and reader hostnames
  set_fact:
    _reader_hostname: "{{ _mysql_cluster_full_name }}-{{ _reader_delta }}.{{ _mysql_cluster_full_name }}"
    _writer_hostname: "{{ _mysql_cluster_full_name }}-0.{{ _mysql_cluster_full_name }}"

- name: Get the reader replication status
  mysql_replication:
    mode: getslave
    login_user: "{{ _mysql_operator_user }}"
    login_password: "{{ _mysql_operator_password }}"
    login_host: "{{ _reader_hostname }}"
  ignore_errors: true
  register: _reader_status

# - name: Get the reader status
#   debug: var=_reader_status

- name: Get the writer replication status
  mysql_replication:
    mode: getmaster
    login_user: "{{ _mysql_operator_user }}"
    login_password: "{{ _mysql_operator_password }}"
    login_host: "{{ _writer_hostname }}"
  register: _writer_status
  when:
    - (_reader_status.Is_Slave is defined and not _reader_status.Is_Slave) or (_reader_status.Is_Slave is not defined and _reader_status is failed)

# - name: get the writer status
#   debug: var=_writer_status

- name: Configure replication on the reader
  mysql_replication:
    mode: changemaster
    master_host: "{{ _writer_hostname }}"
    master_user: "{{ _mysql_operator_user }}"
    master_password: "{{ _mysql_operator_password }}"
    master_log_file: "{{ _writer_status.File }}"
    master_log_pos: "{{ _writer_status.Position }}"
    login_user: "{{ _mysql_operator_user }}"
    login_password: "{{ _mysql_operator_password }}"
    login_host: "{{ _reader_hostname }}"
  ignore_errors: true
  when:
    - _writer_status.File is defined
    - (_reader_status.Is_Slave is defined and not _reader_status.Is_Slave) or (_reader_status.Is_Slave is not defined and slave is failed)

- name: Start replication
  mysql_replication:
    mode: startslave
    login_user: "{{ _mysql_operator_user }}"
    login_password: "{{ _mysql_operator_password }}"
    login_host: "{{ _reader_hostname }}"
  when:
    - (_reader_status.Is_Slave is defined and not _reader_status.Is_Slave) or (_reader_status.Is_Slave is not defined and slave is failed)
