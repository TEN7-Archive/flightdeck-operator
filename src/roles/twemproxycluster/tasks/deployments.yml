---
- name: Create twemproxy deployment
  k8s:
    definition: |
      ---
      apiVersion: apps/v1
      kind: deployment
      metadata:
        name: {{ _twempoxy_cluster_full_name }}
        labels:
          app.kubernetes.io/managed-by: "flightdeck-operator"
          app.kubernetes.io/created-by: "controller-manager"
          app.kubernetes.io/name: "twemproxy"
          app.kubernetes.io/instance: "{{ ansible_operator_meta.name }}"
          app.kubernetes.io/part-of: "{{ _twempoxy_cluster_full_name }}"
          flightdeck.ten7.io/twemproxycluster: "{{ ansible_operator_meta.name }}"
      spec:
        replicas: {{ replicas | default('1') }}
        selector:
          matchLabels:
            app.kubernetes.io/name: "TwemproxyCluster"
            app.kubernetes.io/component: "twemproxy"
            flightdeck.ten7.io/twemproxycluster: "{{ ansible_operator_meta.name }}"
      {% if strategy is defined %}
        strategy:
          {{ strategy | to_nice_yaml(indent=2) | indent(4) }}
      {% else %}
        strategy:
          type: RollingUpdate
          rollingUpdate:
            maxSurge: 0
            maxUnavailable: 1
      {% endif %}
        minReadySeconds: {{ min_ready_seconds | default(30) }}
        template:
          metadata:
            labels:
              app.kubernetes.io/name: "TwemproxyCluster"
              app.kubernetes.io/component: "twemproxy"
              flightdeck.ten7.io/twemproxycluster: "{{ ansible_operator_meta.name }}"
      {% if _flightdeck_t7_io_twemproxy_spec.annotations is defined %}
            annotations:
      {% for _annotation in annotations | default([]) %}
              {{ _annotation.key }}: {{ _annotation.value }}
      {% endfor %}
      {% endif %}
          spec:
      {% if node_selector is defined %}
            nodeSelector:
              {{ _flightdeck_t7_io_twemproxy_spec.nodeSelector | to_nice_yaml(indent=2) | indent(8) }}
      {% endif %}
      {% if (_flightdeck_t7_io_twemproxy_spec is defined) and (_flightdeck_t7_io_twemproxy_spec.affinity is defined )%}
            affinity:
              {{ _flightdeck_t7_io_twemproxy_spec.affinity | to_nice_yaml(indent=2) | indent(8) }}
      {% endif %}
            containers:
              - name: "twemproxy"
                image: {{ image | default('ten7/flightdeck-twemproxy-0.4') }}
                imagePullPolicy: Always
      {% if _flightdeck_t7_io_twemproxy_spec.resources is defined %}
                resources:
                  {{ _flightdeck_t7_io_twemproxy_spec.resources | to_nice_yaml(indent=2) | indent(12) }}
      {% endif %}
                env:
      {% if flightdeck_debug | default(false) %}
                  - name: ANSIBLE_VERBOSITY
                    value: "4"
      {% endif %}
      {% if flightdeck_skip_entrypoint | default(false) %}
                  - name: FLIGHTDECK_SKIP_ENTRYPOINT
                    value: "1"
      {% endif %}
                ports:
      {% for _pool in pools | default([]) %}
                  - containerPort: {{ _pool.port }}
                    name: {{ _pool.name }}
                    protocol: TCP
      {% endfor %}
                volumeMounts:
                  - name: "twemproxy-config"
                    mountPath: "/config/twemproxy"
            volumes:
              - name: "twemproxy-config"
                configMap:
                  name: {{ _twempoxy_cluster_full_name }}
    namespace: "{{ ansible_operator_meta.namespace }}"
    wait: true
    wait_timeout: 120
