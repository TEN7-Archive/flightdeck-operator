---

- name: Get the login secret name
  set_fact:
    _login_secret_name: "{{ _login.secret | default(_htpasswd_full_name + '-login-' + _login.name) }}"
- name: Check if the login secret already exists
  set_fact:
    _login_secret_def: "{{ lookup('k8s', kind='secret', namespace=ansible_operator_meta.namespace, resource_name=_login_secret_name) }}"

- name: Create tempfile for the login secret
  tempfile:
    state: file
    prefix: "login_secret"
  register: _login_secret_passfile
  when:
    - "(_login_secret_def | length) < 1"

- name: Get the login password
  set_fact:
    _login_secret_password: "\
      {% if _login_secret_def.data['password'] is not defined %}\
      {{ lookup('password', '_login_secret_passfile.path chars=ascii_letters,digits,hexdigits,punctuation') }}\
      {% else %}\
      {{ _login_secret_def.data['password'] | b64decode }}\
      {% endif %}"

- name: Create login secret if it doesn't exist
  k8s:
    definition: |
      apiVersion: v1
      data:
        password: "{{ _login_secret_password | b64encode }}"
      kind: Secret
      metadata:
        name: {{ _login_secret_name }}
        labels:
          app.kubernetes.io/managed-by: "flightdeck-operator"
          app.kubernetes.io/created-by: "controller-manager"
      type: Opaque
    namespace: "{{ ansible_operator_meta.namespace }}"
  when:
    - "(_login_secret_def | length) < 1"

# We always need to run this task, so tell Ansible to ignore it as a change.
- name: Add the login to the htpasswd temp file
  htpasswd:
    path: "{{ _htpasswd_temp_file.path }}"
    state: present
    name: "{{ _login_secret_def.data['username'] | default(_login.name) }}"
    password: "{{ _login_secret_password }}"
  changed_when: false

- name: Delete the tempfile for the login secret
  file:
    path: "{{ _login_secret_passfile.path }}"
    state: absent
  when:
    - _login_secret_passfile.path is defined
