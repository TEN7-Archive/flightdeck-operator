---
- name: Generate the SolrCluster namespace
  set_fact:
    _solrcluster_namespace: "{{ solr_cluster.namespace | default(ansible_operator_meta.namespace) }}"

- name: Fetch the SolrCluster definition
  set_fact:
    _solrcluster_def: "{{ lookup('k8s', kind='SolrCluster', namespace=_solrcluster_namespace, resource_name=solr_cluster.name) }}"

- fail:
    msg: "Could not find requested SolrCluster {{ solr_cluster.name }}"
  when:
    - "(_solrcluster_def | default([])) | length < 1"

- name: Generate the solr cluster name
  set_fact:
    _solr_cluster_full_name: "{{ _solrcluster_def.spec.fullnameOverride | default(solr_cluster.name + '-solrcluster') }}"

- name: Generate the solr service url
  set_fact:
    _solr_cluster_url: "http://{{ _solrcluster_def.spec.service.name | default(_solr_cluster_full_name) }}.{{ _solrcluster_namespace }}.svc.cluster.local:{{ _solrcluster_def.spec.port | default('8983') }}"

- name: Generate the solr admin secret name
  set_fact:
    _solr_admin_secret_name: "{{ _solrcluster_def.spec.solrAdmin.secret | default('admin-' + _solr_cluster_full_name) }}"

- name: Fetch the solr admin secret
  set_fact:
    _solr_admin_secret_def: "{{ lookup('k8s', kind='secret', namespace=_solrcluster_namespace, resource_name=_solr_admin_secret_name) }}"

- fail:
    msg: "Could not find requested secret {{ _solr_admin_secret_name }}"
  when:
    - "(_solr_admin_secret_def | default([])) | length < 1"

- name: Extract the solr admin credentials
  set_fact:
    _solr_admin_user: "{{ _solr_admin_secret_def.data['user'] | b64decode }}"
    _solr_admin_password: "{{ _solr_admin_secret_def.data['password'] | b64decode }}"

- name: Generate the solr user name
  set_fact:
    _solr_user_full_name: "{{ fullname_override | default(ansible_operator_meta.name + '-solruser') }}"

- name: Work with secrets
  include_tasks: 'secrets.yml'
- name: Work with users
  include_tasks: 'users.yml'

- name: Update the CRD status
  operator_sdk.util.k8s_status:
    api_version: flightdeck.t7.io/v1
    kind: SolrUser
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
    status:
      flightdeckOperator:
        firstRun: true
        status: true
        deleting: false
        message: "SolrUser {{ ansible_operator_meta.name }} ready."
